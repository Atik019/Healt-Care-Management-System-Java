package healthcareMS;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.SystemColor;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


public class doctor extends JFrame {

	private JPanel contentPane;
	private JTable table;
	private JTextField txId;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					doctor frame = new doctor();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public doctor() {
		setTitle("Health Care Management System");
		setResizable(false);
		setBackground(Color.WHITE);
		setIconImage(Toolkit.getDefaultToolkit().getImage("F:\\java\\healthcareMS\\src\\image\\logo.png"));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 849, 555);
		contentPane = new JPanel();
		contentPane.setForeground(Color.WHITE);
		contentPane.setBackground(Color.BLACK);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel_2 = new JLabel("Welcome To Health Care Management System");
		lblNewLabel_2.setForeground(Color.WHITE);
		lblNewLabel_2.setFont(new Font("Papyrus", Font.BOLD, 31));
		lblNewLabel_2.setBackground(Color.WHITE);
		lblNewLabel_2.setBounds(57, 10, 714, 114);
		contentPane.add(lblNewLabel_2);
		
		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setIcon(new ImageIcon("F:\\java\\healthcareMS\\src\\image\\sign.png"));
		lblNewLabel_1.setBounds(378, 104, 70, 70);
		contentPane.add(lblNewLabel_1);
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		tabbedPane.setToolTipText("");
		tabbedPane.setFont(new Font("Rockwell", Font.BOLD, 18));
		tabbedPane.setBackground(new Color(255, 255, 255));
		tabbedPane.setBounds(57, 184, 714, 324);
		contentPane.add(tabbedPane);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(14, 29, 39));
		tabbedPane.addTab("Problem", null, panel, null);
		panel.setLayout(null);
		
		JLabel lblNewLabel_2_3 = new JLabel("2023  Â©  Atikshariar250@gmail.com");
		lblNewLabel_2_3.setForeground(Color.WHITE);
		lblNewLabel_2_3.setFont(new Font("Tahoma", Font.PLAIN, 9));
		lblNewLabel_2_3.setBounds(547, 270, 152, 18);
		panel.add(lblNewLabel_2_3);
		
		
		txId = new JTextField();
		txId.setEditable(false);
		txId.setHorizontalAlignment(SwingConstants.CENTER);
		txId.setFont(new Font("Tahoma", Font.BOLD, 20));
		txId.setColumns(10);
		txId.setBounds(209, 150, 242, 36);
		panel.add(txId);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {}
		});
		scrollPane.setBounds(10, 24, 689, 108);
		panel.add(scrollPane);
		
		
		JTextArea txSolution = new JTextArea();
		txSolution.setFont(new Font("Tahoma", Font.BOLD, 15));
		txSolution.setWrapStyleWord(true);
		txSolution.setTabSize(1);
		txSolution.setRows(5);
		txSolution.setLineWrap(true);
		txSolution.setBounds(210, 193, 241, 73);
		panel.add(txSolution);
		
		table = new JTable();
		table.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				
				DefaultTableModel model = (DefaultTableModel) table.getModel();
				
				String tID=model.getValueAt(table.getSelectedRow(),0).toString();
				
				String tSolution=model.getValueAt(table.getSelectedRow(),2).toString();
				
				txId.setText(tID);
				txSolution.setText(tSolution);
				
			}
		});
		scrollPane.setViewportView(table);
		
		
		
		JButton btnSubmit = new JButton("Submit");
		btnSubmit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				
//				String uName2 = txUsername2.getText();
				
				//connecting to database 
				try {
		            Class.forName("com.mysql.jdbc.Driver");
		            Connection conn = null;
		            conn = DriverManager.getConnection("jdbc:mysql://localhost/healthcare","root", "");
		            System.out.println("Database is connected !");
		            
		            //System.out.println(uName2);
		            
		            Statement stmt = conn.createStatement() ;
		            String query = "update problem set where username='"+uName2+"';" ;
		            int count=stmt.executeUpdate(query);
		            
		            if(count>0) {
		            	JFrame f=new JFrame();  
						JOptionPane.showMessageDialog(f,"Successfully Deleted");
						
//						btnRefresh.doClick();
											
						
		            }
		            else {
		            	
		            	JFrame f=new JFrame();  
						JOptionPane.showMessageDialog(f,"No match found");
		            	
		            }

		            conn.close();
		        }
		        catch(Exception e1) {
		        	
		            System.out.print("Do not connect to DB - Error:"+e1);
		            JFrame f=new JFrame();  
					JOptionPane.showMessageDialog(f,"No match found");
		            
		        }
				
				
				txSolution.setText("");
				
				
				
			}
		});
		btnSubmit.setForeground(new Color(0, 0, 102));
		btnSubmit.setFont(new Font("SimSun", Font.BOLD, 22));
		btnSubmit.setBackground(UIManager.getColor("Button.background"));
		btnSubmit.setBounds(483, 183, 112, 36);
		panel.add(btnSubmit);
		
		JLabel lblId = new JLabel("ID");
		lblId.setForeground(new Color(220, 20, 60));
		lblId.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblId.setBounds(178, 146, 37, 42);
		panel.add(lblId);
		
		
		
		JLabel lblSolution = new JLabel("Solution");
		lblSolution.setForeground(new Color(220, 20, 60));
		lblSolution.setFont(new Font("Tahoma", Font.BOLD, 20));
		lblSolution.setBounds(122, 211, 83, 42);
		panel.add(lblSolution);
		
		JButton btnBack = new JButton("Log Out");
		btnBack.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				homePage frame = new homePage();
				frame.setVisible(true);
				dispose();
				
				
			}
		});
		btnBack.setForeground(new Color(0, 0, 102));
		btnBack.setFont(new Font("SimSun", Font.BOLD, 22));
		btnBack.setBackground(UIManager.getColor("Button.background"));
		btnBack.setBounds(650, 150, 121, 36);
		contentPane.add(btnBack);
		
		String solution="";
		String glUsername= login.glUsername;
        System.out.println(glUsername);
		
        
        
        
        //reset table data
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.setRowCount(0);
		
		
		//connecting to database 
		try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/healthcare","root", "");
            System.out.println("Database is connected !");
            
            
            Statement stmt = conn.createStatement() ;
            String query = "select * from problem;" ;
            ResultSet rs = stmt.executeQuery(query) ;
            ResultSetMetaData rsmd= rs.getMetaData();
            
            model = (DefaultTableModel) table.getModel();
            
            int cols = rsmd.getColumnCount();
            String[] ColName= new String[cols];
            
            for(int i=0;i<cols;i++) {
            	ColName[i]=rsmd.getColumnName(i+1);
            }

            model.setColumnIdentifiers(ColName);
            
            String rId,rProblem,rSolution,rUsername;
            
            
            while(rs.next()) {
            	
            	rId=rs.getString(1);
            	rProblem=rs.getString(2);
            	rSolution=rs.getString(3);
            	rUsername=rs.getString(4);
            	

            	
            	String[] row= {rId,rProblem,rSolution,rUsername};
            	model.addRow(row);
            }
            
            
            conn.close();
        }
        catch(Exception e1) {
            System.out.print("Do not connect to DB - Error:"+e1);
        }

		
		
		
	}
}
